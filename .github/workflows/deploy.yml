name: Deploy

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        uses: ./.github/actions/build
        with:
          base-href: /${{ github.event.repository.name }}/
      - name: Prepare
        run: cp ./dist/${{ github.event.repository.name }}/browser/index.html ./dist/${{ github.event.repository.name }}/browser/404.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/${{ github.event.repository.name }}/browser

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetches all history for all branches and tags
          fetch-depth: 0
      - name: Generate tag
        id: tag
        run: |
          BASE_TAG="v$(date +'%Y-%m-%d')"
          # Check if base tag (e.g. v2025-08-06) exists
          if git rev-parse -q --verify "refs/tags/$BASE_TAG" >/dev/null; then
            # If it exists, find the next available increment (e.g. v2025-08-06-1)
            i=1
            while git rev-parse -q --verify "refs/tags/${BASE_TAG}-${i}" >/dev/null; do
              i=$((i+1))
            done
            NEW_TAG="${BASE_TAG}-${i}"
          else
            # If it does not exist, use the base tag
            NEW_TAG="$BASE_TAG"
          fi
          echo "tag_name=$NEW_TAG" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          generate_release_notes: true
